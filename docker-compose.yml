services:
  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - app_network
    secrets:
      - db_password
    environment:
      - POSTGRES_USER=tales-admin
      - POSTGRES_DB=tales-app
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "tales-admin", "-d", "tales-app"]
      interval: 30s
      start_period: 5s
      timeout: 10s
      retries: 5

  migrate:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./backend
    restart: "no"
    networks:
      - app_network
    env_file:
      - ./backend/.env
    command: ["npm", "run", "prisma", "migrate", "deploy"]

  backend:
    depends_on:
      - migrate
    build:
      context: ./backend
    restart: always
    networks:
      - app_network
    env_file:
      - ./backend/.env
    ports:
      - 8000:8000

  web:
    depends_on:
      - backend
    build:
      context: ./web
    restart: always
    networks:
      - app_network
    env_file:
      - ./web/.env
    ports:
      - 3000:3000

secrets:
  db_password:
    file: ./secrets/db_password.txt

networks:
  app_network:
